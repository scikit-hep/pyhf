[build-system]
requires = [
    "hatchling>=1.13.0",
    "hatch-vcs>=0.3.0",
]
build-backend = "hatchling.build"

[project]
name = "pyhf"
dynamic = ["version"]
description = "pure-Python HistFactory implementation with tensors and autodiff"
readme = "README.rst"
license = { text = "Apache-2.0" }  # SPDX short identifier
requires-python = ">=3.8"
authors = [
    { name = "Lukas Heinrich", email = "lukas.heinrich@cern.ch" },
    { name = "Matthew Feickert", email = "matthew.feickert@cern.ch" },
    { name = "Giordon Stark", email = "gstark@cern.ch" },
]
maintainers = [ {name = "The Scikit-HEP admins", email = "scikit-hep-admins@googlegroups.com"} ]
keywords = [
    "fitting",
    "jax",
    "numpy",
    "physics",
    "scipy",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: WebAssembly :: Emscripten",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "click>=8.0.0",  # for console scripts
    "importlib_resources>=1.4.0; python_version < '3.9'",  # for resources in schema
    "jsonpatch>=1.15",
    "jsonschema>=4.15.0",  # for utils
    "pyyaml>=5.1",  # for parsing CLI equal-delimited options
    # c.f. https://github.com/scikit-hep/pyhf/issues/2593 for excluded v1.16.x versions
    "scipy>=1.5.2,!=1.16.0,!=1.16.1,!=1.16.2",  # requires numpy, which is required by pyhf
    "tqdm>=4.56.0",  # for readxml
    "numpy",  # compatible versions controlled through scipy
]

[project.scripts]
pyhf = "pyhf.cli:cli"

[project.urls]
Documentation = "https://pyhf.readthedocs.io/"
Homepage = "https://github.com/scikit-hep/pyhf"
"Issue Tracker" = "https://github.com/scikit-hep/pyhf/issues"
"Release Notes" = "https://pyhf.readthedocs.io/en/stable/release-notes.html"
"Releases" = "https://github.com/scikit-hep/pyhf/releases"
"Source Code" = "https://github.com/scikit-hep/pyhf"

[project.optional-dependencies]
shellcomplete = ["click_completion"]
jax = [
    "jax>=0.4.1",  # c.f. PR #2079
    "jaxlib>=0.4.1",  # c.f. PR #2079
]
xmlio = ["uproot>=4.1.1"]  # c.f. PR #1567
minuit = ["iminuit>=2.7.0"]  # c.f. PR #1895
contrib = [
    "matplotlib>=3.0.0",
    "requests>=2.22.0",
]
backends = ["pyhf[jax,minuit]"]
all = ["pyhf[backends,xmlio,contrib,shellcomplete]"]

# Developer extras
test = [
    "scikit-hep-testdata>=0.4.11",
    "pytest>=6.0",
    "coverage[toml]>=6.0.0",
    "pytest-mock",
    "requests-mock>=1.9.0",
    "pytest-benchmark[histogram]",
    "pytest-console-scripts>=1.4.0",
    "pytest-mpl",
    "ipympl>=0.3.0",
    "pydocstyle",
    "papermill>=2.5.0",
    "scrapbook>=0.5.0",
    "notebook>=6.5.7",
    "graphviz",
    "pytest-socket>=0.2.0",  # c.f. PR #1917
]
docs = [
    "pyhf[xmlio,contrib]",
    "sphinx>=7.0.0",  # c.f. https://github.com/scikit-hep/pyhf/pull/2271
    "sphinxcontrib-bibtex>=2.1",
    "sphinx-click>=2.5.0",
    "pydata-sphinx-theme>=0.15.3",
    "nbsphinx!=0.8.8",  # c.f. https://github.com/spatialaudio/nbsphinx/issues/620
    "ipywidgets",
    "intersphinx_registry>=0.2411.17",
    "sphinx-issues",
    "sphinx-copybutton>=0.3.2,!=0.5.1",
    "jupyterlite-sphinx>=0.13.1",  # c.f. https://github.com/scikit-hep/pyhf/pull/2458
    "jupyterlite-pyodide-kernel>=0.0.7",
    "jupytext>=1.14.0",
    "ipython!=8.7.0",  # c.f. https://github.com/scikit-hep/pyhf/pull/2068
]
develop = [
    "pyhf[all,test,docs]",
    "tbump>=6.7.0",
    "pre-commit",
    "nox",
    "uv>=0.1.39"
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/pyhf/_version.py"

[tool.hatch.build.targets.sdist]
# only-include needed to properly include src/pyhf/schemas
# c.f. https://github.com/pypa/hatch/pull/299
# hatchling always includes:
# pyproject.toml, .gitignore, any README, any LICENSE, AUTHORS
only-include = [
    "/src",
    "/CITATION.cff"
]
exclude = [
    "/src/conftest.py"
]

[tool.hatch.build.targets.wheel]
packages = ["src/pyhf"]

[tool.black]
line-length = 88
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | .eggs
  | build
  | .nox
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
xfail_strict = true
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
    "--doctest-modules",
    "--doctest-glob='*.rst'",
]
log_cli_level = "info"
testpaths = "tests"
markers = [
    "fail_jax",
    "fail_numpy",
    "fail_numpy_minuit",
    "only_jax",
    "only_numpy",
    "only_numpy_minuit",
    "skip_jax",
    "skip_numpy",
    "skip_numpy_minuit",
]
filterwarnings = [
    "error",
    'ignore:the `interpolation=` argument to percentile was renamed to `method=`, which has additional options:DeprecationWarning',  # Issue #1772
    "ignore:The interpolation= argument to 'quantile' is deprecated. Use 'method=' instead:DeprecationWarning",  # Issue #1772
    'ignore: Exception ignored in:pytest.PytestUnraisableExceptionWarning',  #FIXME: Exception ignored in: <_io.FileIO [closed]>
    'ignore:invalid value encountered in (true_)?divide:RuntimeWarning',  #FIXME
    'ignore:invalid value encountered in add:RuntimeWarning',  #FIXME
    'ignore:divide by zero encountered in (true_)?divide:RuntimeWarning',  #FIXME: pytest tests/test_tensor.py::test_pdf_calculations[numpy]
    'ignore:[A-Z]+ is deprecated and will be removed in Pillow 10:DeprecationWarning',  # keras
    "ignore:ml_dtypes.float8_e4m3b11 is deprecated.",  #FIXME: Can remove when jaxlib>=0.4.12
    "ignore:jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the:DeprecationWarning",  # Issue #2139
    "ignore:Skipping device Apple Paravirtual device that does not support Metal 2.0:UserWarning",  # Can't fix given hardware/virtualized device
    "ignore:jax.xla_computation is deprecated. Please use the AOT APIs:DeprecationWarning",  # jax v0.4.30
    "ignore:'MultiCommand' is deprecated and will be removed in Click 9.0. Use 'Group' instead.:DeprecationWarning",  # Click
    "ignore:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",  # papermill
    "ignore:datetime.datetime.utcnow\\(\\) is deprecated:DeprecationWarning",  # papermill
]

[tool.coverage.run]
source = ["pyhf"]
branch = true
omit = ["*/pyhf/typing.py"]

[tool.coverage.report]
precision = 1
sort = "cover"
show_missing = true
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.mypy]
files = "src"
python_version = "3.13"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
  'jax.*',
  'matplotlib.*',
  'scipy.*',
  'uproot.*',
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  'pyhf',
  'pyhf.optimize.*',
  'pyhf.contrib.*',
  'pyhf.infer.*',
  'pyhf.interpolators.*',
  'pyhf.cli.*',
  'pyhf.modifiers.*',
  'pyhf.exceptions.*',
  'pyhf.parameters.*',
  'pyhf.schema.*',
  'pyhf.writexml',
  'pyhf.workspace',
  'pyhf.patchset',
  'pyhf.compat',
  'pyhf.events',
  'pyhf.utils',
  'pyhf.constraints',
  'pyhf.pdf',
  'pyhf.simplemodels',
  'pyhf.probability',
  'pyhf.tensor.common.*',
  'pyhf.tensor',
  'pyhf.tensor.jax_backend.*',
]
ignore_errors = true

[tool.ruff]
src = ["src"]
line-length = 88

[tool.ruff.lint]
select = [
  "E", "F", "W", # flake8
  "UP",          # pyupgrade
  "RUF",         # Ruff-specific
  "TID",         # flake8-tidy-imports
]
ignore = [
  "E402",
  "E501",
  "RUF001", # String contains ambiguous unicode character
  "RUF005", # unpack-instead-of-concatenating-to-collection-literal
]
typing-modules = ["pyhf.typing"]
unfixable = [
  "F841", # Removes unused variables
]
flake8-tidy-imports.ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"docs/lite/jupyterlite.py" = ["F401", "F704"]
"**.ipynb" = ["F821", "F401", "F841", "F811", "E703"]
