[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyhf"
dynamic = ["version"]
description = "pure-Python HistFactory implementation with tensors and autodiff"
readme = "README.rst"
license = { file = "LICENSE" }
requires-python = ">=3.8"
authors = [
    { name = "Lukas Heinrich", email = "lukas.heinrich@cern.ch" },
    { name = "Matthew Feickert", email = "matthew.feickert@cern.ch" },
    { name = "Giordon Stark", email = "gstark@cern.ch" },
]
maintainers = [ {name = "The Scikit-HEP admins", email = "scikit-hep-admins@googlegroups.com"} ]
keywords = [
    "fitting",
    "jax",
    "numpy",
    "physics",
    "pytorch",
    "scipy",
    "tensorflow",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "click>=8.0.0",  # for console scripts
    "importlib_resources>=1.4.0; python_version < '3.9'",  # for resources in schema
    "jsonpatch>=1.15",
    "jsonschema>=4.15.0",  # for utils
    "pyyaml>=5.1",  # for parsing CLI equal-delimited options
    "scipy>=1.5.1",  # requires numpy, which is required by pyhf and tensorflow
    "tqdm>=4.56.0",  # for readxml
    "numpy",  # compatible versions controlled through scipy
]

[project.scripts]
pyhf = "pyhf.cli:cli"

[project.urls]
Documentation = "https://pyhf.readthedocs.io/"
Homepage = "https://github.com/scikit-hep/pyhf"
"Issue Tracker" = "https://github.com/scikit-hep/pyhf/issues"
"Release Notes" = "https://pyhf.readthedocs.io/en/stable/release-notes.html"
"Source Code" = "https://github.com/scikit-hep/pyhf"

# FIXME: Make recursive
[project.optional-dependencies]
backends = [
    "iminuit>=2.7.0",
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
    "tensorflow-probability>=0.11.0",
    "tensorflow>=2.7.0",
    "torch>=1.10.0",
]
complete = [
    "check-manifest",
    "click_completion",
    "codemetapy>=2.3.0",
    "coverage[toml]>=6.0.0",
    "graphviz",
    "iminuit>=2.7.0",
    "ipython",
    "ipython!=8.7.0",
    "ipywidgets",
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
    "jupyter",
    "matplotlib",
    "nbdime",
    "nbsphinx!=0.8.8",
    "nox",
    "papermill~=2.3.4",
    "pre-commit",
    "pydocstyle",
    "pytest-benchmark[histogram]",
    "pytest-console-scripts",
    "pytest-mock",
    "pytest-mpl",
    "pytest-socket>=0.2.0",
    "pytest>=6.0",
    "requests",
    "requests-mock>=1.9.0",
    "scikit-hep-testdata>=0.4.11",
    "scrapbook~=0.5.0",
    "sphinx-click",
    "sphinx-copybutton>=0.3.2",
    "sphinx-issues",
    "sphinx-togglebutton>=0.3.0",
    "sphinx>=5.1.1",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex~=2.1",
    "tbump>=6.7.0",
    "tensorflow-probability>=0.11.0",
    "tensorflow>=2.7.0",
    "torch>=1.10.0",
    "twine",
    "uproot>=4.1.1",
]
contrib = [
    "matplotlib",
    "requests",
]
develop = [
    "check-manifest",
    "click_completion",
    "codemetapy>=2.3.0",
    "coverage[toml]>=6.0.0",
    "graphviz",
    "iminuit>=2.7.0",
    "ipython",
    "ipython!=8.7.0",
    "ipywidgets",
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
    "jupyter",
    "matplotlib",
    "nbdime",
    "nbsphinx!=0.8.8",
    "nox",
    "papermill~=2.3.4",
    "pre-commit",
    "pydocstyle",
    "pytest-benchmark[histogram]",
    "pytest-console-scripts",
    "pytest-mock",
    "pytest-mpl",
    "pytest-socket>=0.2.0",
    "pytest>=6.0",
    "requests",
    "requests-mock>=1.9.0",
    "scikit-hep-testdata>=0.4.11",
    "scrapbook~=0.5.0",
    "sphinx-click",
    "sphinx-copybutton>=0.3.2",
    "sphinx-issues",
    "sphinx-togglebutton>=0.3.0",
    "sphinx>=5.1.1",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex~=2.1",
    "tbump>=6.7.0",
    "tensorflow-probability>=0.11.0",
    "tensorflow>=2.7.0",
    "torch>=1.10.0",
    "twine",
    "uproot>=4.1.1",
]
docs = [
    "ipython!=8.7.0",
    "ipywidgets",
    "matplotlib",
    "nbsphinx!=0.8.8",
    "requests",
    "sphinx-click",
    "sphinx-copybutton>=0.3.2",
    "sphinx-issues",
    "sphinx-togglebutton>=0.3.0",
    "sphinx>=5.1.1",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex~=2.1",
    "uproot>=4.1.1",
]
jax = [
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
]
minuit = [
    "iminuit>=2.7.0",
]
shellcomplete = [
    "click_completion",
]
tensorflow = [
    "tensorflow-probability>=0.11.0",
    "tensorflow>=2.7.0",
]
test = [
    "click_completion",
    "coverage[toml]>=6.0.0",
    "graphviz",
    "iminuit>=2.7.0",
    "jax>=0.4.1",
    "jaxlib>=0.4.1",
    "jupyter",
    "matplotlib",
    "papermill~=2.3.4",
    "pydocstyle",
    "pytest-benchmark[histogram]",
    "pytest-console-scripts",
    "pytest-mock",
    "pytest-mpl",
    "pytest-socket>=0.2.0",
    "pytest>=6.0",
    "requests",
    "requests-mock>=1.9.0",
    "scikit-hep-testdata>=0.4.11",
    "scrapbook~=0.5.0",
    "tensorflow-probability>=0.11.0",
    "tensorflow>=2.7.0",
    "torch>=1.10.0",
    "uproot>=4.1.1",
]
torch = [
    "torch>=1.10.0",
]
xmlio = [
    "uproot>=4.1.1",
]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/pyhf/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/ src",
]
[tool.hatch.build.targets.wheel]
packages = [
    " src/pyhf",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | .eggs
  | build
  | .nox
)/
'''

[tool.check-manifest]
ignore = [
    'docs*',
    'validation*',
    'examples*',
    'tests*',
    'docker*',
    'binder*',
    '.*',
    'pyproject.toml',
    'pytest.ini',
    'codecov.yml',
    'codemeta.json',
    'CODE_OF_CONDUCT.md',
    'CONTRIBUTING.md',
    'AUTHORS',
]

[tool.pytest.ini_options]
minversion = "6.0"
xfail_strict = true
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
    "--doctest-modules",
    "--doctest-glob='*.rst'",
]
log_cli_level = "info"
testpaths = "tests"
markers = [
    "fail_jax",
    "fail_numpy",
    "fail_numpy_minuit",
    "fail_pytorch",
    "fail_pytorch64",
    "fail_tensorflow",
    "only_jax",
    "only_numpy",
    "only_numpy_minuit",
    "only_pytorch",
    "only_pytorch64",
    "only_tensorflow",
    "skip_jax",
    "skip_numpy",
    "skip_numpy_minuit",
    "skip_pytorch",
    "skip_pytorch64",
    "skip_tensorflow",
]
filterwarnings = [
    "error",
    'ignore:the imp module is deprecated:DeprecationWarning',  # tensorflow
    'ignore:distutils Version classes are deprecated:DeprecationWarning',  # tensorflow-probability
    'ignore:the `interpolation=` argument to percentile was renamed to `method=`, which has additional options:DeprecationWarning',  # Issue #1772
    "ignore:The interpolation= argument to 'quantile' is deprecated. Use 'method=' instead:DeprecationWarning",  # Issue #1772
    'ignore: Exception ignored in:pytest.PytestUnraisableExceptionWarning',  #FIXME: Exception ignored in: <_io.FileIO [closed]>
    'ignore:invalid value encountered in (true_)?divide:RuntimeWarning',  #FIXME
    'ignore:invalid value encountered in add:RuntimeWarning',  #FIXME
    "ignore:In future, it will be an error for 'np.bool_' scalars to be interpreted as an index:DeprecationWarning",  #FIXME: tests/test_tensor.py::test_pdf_eval[pytorch]
    'ignore:Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with:UserWarning',  #FIXME: tests/test_optim.py::test_minimize[no_grad-scipy-pytorch-no_stitch]
    'ignore:divide by zero encountered in (true_)?divide:RuntimeWarning',  #FIXME: pytest tests/test_tensor.py::test_pdf_calculations[numpy]
    'ignore:[A-Z]+ is deprecated and will be removed in Pillow 10:DeprecationWarning',  # keras
    'ignore:Call to deprecated create function:DeprecationWarning',  # protobuf via tensorflow
    'ignore:`np.bool8` is a deprecated alias for `np.bool_`:DeprecationWarning',  # numpy via tensorflow
]

[tool.coverage.run]
source = ["pyhf"]
branch = true
omit = ["*/pyhf/typing.py"]

[tool.coverage.report]
precision = 1
sort = "cover"
show_missing = true

[tool.nbqa.mutate]
pyupgrade = 1

[tool.nbqa.addopts]
pyupgrade = ["--py38-plus"]

[tool.mypy]
files = "src"
python_version = "3.10"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
  'jax.*',
  'matplotlib.*',
  'scipy.*',
  'tensorflow.*',
  'tensorflow_probability.*',
  'torch.*',
  'uproot.*',
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  'pyhf',
  'pyhf.optimize.*',
  'pyhf.contrib.*',
  'pyhf.infer.*',
  'pyhf.interpolators.*',
  'pyhf.cli.*',
  'pyhf.modifiers.*',
  'pyhf.exceptions.*',
  'pyhf.parameters.*',
  'pyhf.schema.*',
  'pyhf.writexml',
  'pyhf.workspace',
  'pyhf.patchset',
  'pyhf.compat',
  'pyhf.events',
  'pyhf.utils',
  'pyhf.constraints',
  'pyhf.pdf',
  'pyhf.simplemodels',
  'pyhf.probability',
  'pyhf.tensor.common.*',
  'pyhf.tensor',
  'pyhf.tensor.jax_backend.*',
  'pyhf.tensor.tensorflow_backend.*',
  'pyhf.tensor.pytorch_backend.*',
]
ignore_errors = true
