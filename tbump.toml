# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/scikit-hep/pyhf/"

[version]
current = "0.6.3"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (rc
    (?P<candidate>\d+)
  )?
  '''

[git]
# The current version will get updated when tbump is run
message_template = "Bump version: 0.6.3 â†’ {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[file]]
src = "tbump.toml"

[[file]]
src = "src/pyhf/utils.py"

[[file]]
src = "README.rst"

[[file]]
src = "src/pyhf/data/citation.bib"

[[file]]
src = ".zenodo.json"

[[file]]
src = "codemeta.json"

[[file]]
src = "CITATION.cff"

[[field]]
# the name of the field
name = "candidate"
# the default value to use, if there is no match
default = ""

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#  [[before_commit]]
#  name = "check changelog"
#  cmd = "grep -q {new_version} Changelog.rst"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
