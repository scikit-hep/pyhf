name: CI/CD

on:
  push:
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1.2.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --ignore-installed -U -q --no-cache-dir -e .[test]
        python -m pip list
    - name: Lint with Pyflakes
      if: matrix.python-version == 3.7 && matrix.os == 'ubuntu-latest'
      run: |
        python -m pyflakes .
    - name: Lint with Black
      if: matrix.python-version == 3.7 && matrix.os == 'ubuntu-latest'
      run: |
        black --check --diff --verbose .
    - name: Check MANIFEST
      if: matrix.python-version == 3.7 && matrix.os == 'ubuntu-latest'
      run: |
        check-manifest
    - name: Test with pytest
      run: |
        python -m pytest -r sx --ignore tests/benchmarks/ --ignore tests/contrib --ignore tests/test_notebooks.py
    - name: Report coverage with Codecov
      if: github.event_name == 'push' && matrix.python-version == 3.7 && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v1.0.5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
    - name: Test Contrib module with pytest
      run: |
        python -m pytest -r sx tests/contrib --mpl --mpl-baseline-path tests/contrib/baseline
    - name: Run benchmarks
      if: github.event_name == 'schedule' && matrix.python-version == 3.7
      run: |
        python -m pytest -r sx --benchmark-sort=mean tests/benchmarks/test_benchmark.py

  notebooks:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1.2.0
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --ignore-installed -U -q --no-cache-dir -e .[complete]
        python -m pip list
    - name: Test example notebooks
      run: |
        python -m pytest -r sx tests/test_notebooks.py

  docs:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1.2.0
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --ignore-installed -U -q --no-cache-dir -e .[docs,test]
        python -m pip list
        sudo apt-get update
        sudo apt-get -qq install pandoc
    - name: Check docstrings
      run: |
        # Group 1 is related to docstrings
        pydocstyle --select D1 src/pyhf/pdf.py src/pyhf/workspace.py src/pyhf/probability.py src/pyhf/interpolators src/pyhf/infer src/pyhf/optimize src/pyhf/contrib src/pyhf/cli
    - name: Test and build docs
      run: |
        python -m doctest README.md
        python setup.py build_sphinx
        touch docs/_build/html/.nojekyll
    - name: Check schemas are copied over
      run: |
        # is a directory
        [ -d "docs/_build/html/schemas" ]
        # is not a symlink
        [ ! -L "docs/_build/html/schemas" ]
        # is not empty
        [ "$(ls -A docs/_build/html/schemas)" ]
    - name: Deploy docs to GitHub Pages
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: crazy-max/ghaction-github-pages@v1.0.1
      with:
        target_branch: gh-pages
        build_dir: docs/_build/html
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_PAT }}

  docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1.2.0
    - name: Build Docker image
      run: |
        docker build . --file docker/Dockerfile --tag pyhf/pyhf:$GITHUB_SHA
        docker images
